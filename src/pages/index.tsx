import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useSession, signIn, signOut } from "next-auth/react";
import { AuthStatus } from "../types/custom-next-auth";
import { Spinner } from "../components/spinner/spinner";
import { trpc } from "../utils/trpc";
import { FC } from "react";

export const FolderCard: FC<{ name: string }> = ({ name }) => {
  return (
    <div className="card w-96 bg-base-100 shadow-xl">
      <figure>
        <img src="https://placeimg.com/400/225/arch" alt="Shoes" />
      </figure>
      <div className="card-body">
        <h2 className="card-title">
          {name}
          <div className="badge badge-secondary">NEW</div>
        </h2>
        <p>If a dog chews shoes whose shoes does he choose?</p>
        <div className="card-actions justify-end">
          <div className="badge badge-outline">Fashion</div>
          <div className="badge badge-outline">Products</div>
        </div>
      </div>
    </div>
  );
};

const Home: NextPage = (props) => {
  const { data: session, status } = useSession();

  console.log("session", session);
  console.log("status", status);

  const { data, isLoading, error } = trpc.useQuery([
    "protected.get-my-folders",
  ]);

  console.log("data", data);

  if (status === AuthStatus.LOADING) {
    return <Spinner />;
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        {session ? (
          <div className="mx-4 flex w-full flex-col">
            <div>
              <h1>{session?.user?.name}</h1>
              <p>
                Signed in as {session?.user?.email} <br />
              </p>
              <button className="btn" onClick={() => signOut()}>
                Sign out
              </button>
              {session?.user?.image ? (
                <Image
                  className="rounded-full"
                  src={session?.user?.image}
                  width={50}
                  height={50}
                  alt="User image"
                />
              ) : null}
            </div>

            <div className="flex flex-wrap gap-4">
              {data?.map((folder) => (
                <FolderCard key={folder?.id} name={folder?.name} />
              ))}
            </div>
          </div>
        ) : (
          <>
            Not signed in <br />
            <button className="btn" onClick={() => signIn()}>
              Sign in
            </button>
          </>
        )}
      </main>
    </>
  );
};

export default Home;
